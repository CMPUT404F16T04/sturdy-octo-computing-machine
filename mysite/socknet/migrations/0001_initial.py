# -*- coding: utf-8 -*-
# Generated by Django 1.10.2 on 2016-11-20 19:52
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AdminConfig',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField()),
                ('sharePosts', models.BooleanField(default=True, verbose_name=b'Share Posts with Other Nodes')),
                ('shareImages', models.BooleanField(default=True, verbose_name=b'Share Images with Other Nodes')),
            ],
            options={
                'verbose_name': 'Admin Configuration',
                'verbose_name_plural': 'Admin Configuration',
            },
        ),
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('github_url', models.TextField(blank=True)),
                ('about_me', models.CharField(blank=True, max_length=1000)),
                ('birthday', models.DateField(blank=True, null=True)),
                ('displayName', models.CharField(blank=True, max_length=64)),
                ('url', models.CharField(blank=True, max_length=128)),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('content', models.TextField(max_length=512)),
                ('created_on', models.DateTimeField(auto_now=True)),
                ('markdown', models.BooleanField()),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comment_author', to='socknet.Author')),
            ],
        ),
        migrations.CreateModel(
            name='ForeignAuthor',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('display_name', models.CharField(default=b'test', max_length=150)),
                ('url', models.URLField(default=b'')),
            ],
        ),
        migrations.CreateModel(
            name='ImageServ',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('image', models.ImageField(max_length=256, upload_to=b'user_images')),
                ('created_on', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='image_author', to='socknet.Author')),
            ],
        ),
        migrations.CreateModel(
            name='Node',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32)),
                ('url', models.URLField(unique=True)),
                ('foreignNodeUser', models.CharField(max_length=256, null=True)),
                ('foreignNodePass', models.CharField(max_length=256, null=True)),
                ('foreignUserAccessAccount', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(default=b'No Title', max_length=64)),
                ('description', models.CharField(default=b'No description provided.', max_length=128)),
                ('content', models.TextField(max_length=512)),
                ('created_on', models.DateTimeField(auto_now=True)),
                ('markdown', models.BooleanField()),
                ('imglink', models.CharField(max_length=256)),
                ('visibility', models.CharField(choices=[(b'PUBLIC', b'PUBLIC'), (b'FOAF', b'FOAF'), (b'FRIENDS', b'FRIENDS'), (b'PRIVATE', b'PRIVATE'), (b'SERVERONLY', b'SERVERONLY')], default=b'PUBLIC', max_length=255)),
                ('categories', models.CharField(blank=True, default=b'N/A', max_length=64)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='author', to='socknet.Author')),
            ],
        ),
        migrations.CreateModel(
            name='PostManager',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.AddField(
            model_name='imageserv',
            name='parent_post',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='image_parent_post', to='socknet.Post'),
        ),
        migrations.AddField(
            model_name='foreignauthor',
            name='node',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='my_node', to='socknet.Node'),
        ),
        migrations.AddField(
            model_name='comment',
            name='parent_post',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comment_parent_post', to='socknet.Post'),
        ),
        migrations.AddField(
            model_name='author',
            name='foreign_friends',
            field=models.ManyToManyField(blank=True, related_name='my_foreign_friends', to='socknet.ForeignAuthor'),
        ),
        migrations.AddField(
            model_name='author',
            name='foreign_friends_im_following',
            field=models.ManyToManyField(blank=True, related_name='foreign_friends_im_following', to='socknet.ForeignAuthor'),
        ),
        migrations.AddField(
            model_name='author',
            name='friends',
            field=models.ManyToManyField(blank=True, related_name='_author_friends_+', to='socknet.Author'),
        ),
        migrations.AddField(
            model_name='author',
            name='ignored',
            field=models.ManyToManyField(blank=True, related_name='ignored_by', to='socknet.Author'),
        ),
        migrations.AddField(
            model_name='author',
            name='pending_foreign_friends',
            field=models.ManyToManyField(blank=True, related_name='my_pending_foreign_friend_requests', to='socknet.ForeignAuthor'),
        ),
        migrations.AddField(
            model_name='author',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='author',
            name='who_im_following',
            field=models.ManyToManyField(blank=True, related_name='my_followers', to='socknet.Author'),
        ),
    ]
